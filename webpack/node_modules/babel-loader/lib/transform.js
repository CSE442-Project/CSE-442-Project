var babel = require("@babel/core");

var LoaderError = require("./Error");

function env(prev) {
  if (prev === undefined) delete process.env.BABEL_ENV;else process.env.BABEL_ENV = prev;
}

module.exports = function (source, options, cb) {
  var forceEnv = options.forceEnv;
  delete options.forceEnv;
  var tmpEnv;

  if (forceEnv) {
    tmpEnv = process.env.BABEL_ENV;
    process.env.BABEL_ENV = forceEnv;
  }

  babel.transform(source, options, function (err, result) {
    if (forceEnv) env(tmpEnv);

    if (err) {
      return err.message && err.codeFrame ? cb(new LoaderError(err)) : cb(err);
    }

    var code = result.code,
        map = result.map,
        metadata = result.metadata;

    if (map && (!map.sourcesContent || !map.sourcesContent.length)) {
      map.sourcesContent = [source];
    }

    return cb(null, {
      code,
      map,
      metadata
    });
  });
};

module.exports.version = babel.version;